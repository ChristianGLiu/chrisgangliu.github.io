require(["editor","actors","actor","jquery","database","renderer","grapnel","analytics","gallery","bootstrap"],(function(editor,actors,actor,$,db,renderer,Grapnel,ga,gallery,bootstrap){var bar=$("#editor-bar"),baseDir="./",currentFSMs="",mergedDOT="",mergedFSM="",decomposedActors="",HSM_sortedNodes=[],HSM="",currentFSMSObj=null,createFSMJSON="",createDOT="",visualFSMJSON="",visualDOT="",mergeFSMJSON="",mergeDOT="",HSMJSON="",HSMDOT="",basicActorHTML='                  <div class="card actorCard" name="actorCard" id="actorCard_1">  <div class="card-header" id="headingOne">\n                <h2 class="mb-0">\n                    <button type="button" class="btn btn-link actorNameLabel" data-toggle="collapse" data-target="#collapse_1">Actor 1</button>\n                </h2>\n            </div>\n            <div id="collapse_1" class="collapse" aria-labelledby="headingOne" data-parent="#accordionActors">\n                <div class="card-body">\n                    <div class="accordion" id="accordionActor_1">\n                        <div class="card">\n                            <div class="input-group mb-3 input-group-sm">\n                                <div class="input-group-prepend">\n                                    <span class="input-group-text">Actor Name:</span>\n                                </div>\n                                <input type="text" name="actorName" id="actorName_1" value="Actor 1" class="actorName form-control">\n                            </div>\n                            <div class="card-header" id="heading_1_states">\n                                <h2 class="mb-0">\n                                    <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#accordionActor_1_states"><span class="actorNameLabel">Actor 1</span> States\n                                    </button>\n                                </h2>\n                            </div>\n\n                            <div id="accordionActor_1_states" class="collapse" aria-labelledby="heading_1_states" data-parent="#accordionActor_1">\n                                <div class="card-body">\n                                    <table class="states_table table order-list">\n                                        <thead>\n                                        <tr>\n                                            <th>STATEID</th>\n                                            <th>LABEL</th>\n                                            <th>TYPE</th>\n                                            <th>OUTPUT</th>\n                                            <th>delete</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                                <input type="text" name="id" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="label" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="type" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="output" class="form-control">\n                                            </td>\n                                            <td>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </td>\n\n                                        </tr>\n                                        </tbody>\n                                        <tfoot>\n                                        <tr>\n                                            <td colspan="5" style="text-align: left;">\n                                                <input type="button" class="btn btn-lg btn-block addStateRowButton" value="Add One State<">\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                        </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                            <div class="card-header" id="heading_1_transitions">\n                                <h2 class="mb-0">\n                                    <button type="button" class="btn btn-link" data-toggle="collapse" data-target="#accordionActor_1_transitions"><span class="actorNameLabel">Actor 1</span> Transitions\n                                    </button>\n                                </h2>\n                            </div>\n                            <div id="accordionActor_1_transitions" class="collapse" aria-labelledby="heading_1_transitions" data-parent="#accordionActor_1">\n                                <div class="card-body">\n                                    <table class=" transitions_table table order-list">\n                                        <thead>\n                                        <tr>\n                                            <th>FROM</th>\n                                            <th>TO</th>\n                                            <th>INPUT</th>\n                                            <th>TYPE</th>\n                                            <th>delete</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr>\n                                            <td>\n                                                <input type="text" name="from" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="to" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="input" class="form-control">\n                                            </td>\n                                            <td>\n                                                <input type="text" name="type" class="form-control">\n                                            </td>\n                                            <th>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </th>\n                                        </tr>\n                                        </tbody>\n                                        <tfoot>\n                                        <tr>\n                                            <td colspan="5" style="text-align: left;">\n                                                <input type="button" class="btn btn-lg btn-block addTransitionRowButton" value="Add One Transition">\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                        </tr>\n                                        </tfoot>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div></div>';renderer.init("#graph"),renderer.errorHandler((function(error){bar.text(error)}));var attachEvents=function(){$("#fsmcreation").find("*").off(),$("#fsmcreation input[type=text]").on("input",(function(){let jsonString=generateCurrentFSMs();createFSMJSON=jsonString,actor.contents(jsonString)})),$(".deleteRow").click((function(event){let row=$(this).closest("tr");$(row).remove();let jsonString=generateCurrentFSMs();createFSMJSON=jsonString,actor.contents(jsonString),event.preventDefault()})),$(".addStateRowButton").on("click",(function(event){$(this).closest("table").find("tbody").append('<tr>\n                                            <td >\n                                                <input type="text" name="id" class="form-control" />\n                                            </td>\n                                            <td >\n                                                <input type="text" name="label"  class="form-control"/>\n                                            </td>\n                                            <td >\n                                                <input type="text" name="type"  class="form-control"/>\n                                            </td>\n                                            <td >\n                                                <input type="text" name="output"  class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </td>\n\n                                        </tr>'),attachEvents(),event.preventDefault()})),$(".addTransitionRowButton").on("click",(function(event){$(this).closest("table").find("tbody").append('<tr>\n                                            <td>\n                                                <input type="text" name="from" class="form-control" />\n                                            </td>\n                                            <td>\n                                                <input type="text" name="to"  class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <input type="text" name="input"  class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <input type="text" name="type"  class="form-control"/>\n                                            </td>\n                                            <th>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </th>\n                                        </tr>'),attachEvents(),event.preventDefault()}))},transformToDot=function(jsonTxt,mode){let result="",dot="strict digraph G { \r\n node [shape=circle fixedsize=shape fontsize=8 width=1];\r\nrankdir=LR;\r\n",states=[],transitions=[];if(jsonTxt&&jsonTxt.length>0){let obj,results=JSON.parse(jsonTxt).actorsFSM;results&&results.length>0&&results.forEach((function(actor,index){let actorFullname=actor.actor.replace(/ /g,"_");result=result+"subgraph cluster_"+actorFullname+' { label="'+actor.actor+'";\r\n',actor.transitions.forEach((function(value,key){value.FROM&&value.TO&&value.FROM.length>0&&value.TO.length>0&&(result=result+actorFullname+"_"+value.FROM+" -> "+actorFullname+"_"+value.TO,result+="[",value.LABEL&&value.LABEL.length>0&&(result=result+'label="'+value.LABEL+'"];'),"contingency"==value.TYPE?result+="style=dashed]":result+="style=solid]",result+=";\r\n")})),transitions=transitions.concat(actor.transitions),actor.states.forEach((function(state,index){state.STATEID&&state.STATEID.length>0&&(state.LABEL&&0!=state.LABEL.length||(state.LABEL=state.STATEID),result=result+actorFullname+"_"+state.STATEID+"[","contingency"==state.TYPE?result+="style=dashed,":(state.actors=[actorFullname],result+="style=solid,"),result=result+'label="'+state.LABEL+'"];\r\n')})),states=states.concat(actor.states),result+="}\r\n"}));let uniqueActorID=[];states.slice().forEach((function(state,index){let actorName="";state.actors&&state.actors[0]&&(actorName=state.actors[0]),actorName.length&&actorName.length>0&&(-1==uniqueActorID.indexOf(state.STATEID)?uniqueActorID.push(state.STATEID):states.map(s=>{state.STATEID==s.STATEID&&-1==s.actors.indexOf(actorName)&&s.actors.push(actorName)}))}))}if("merge"==mode){mergedFSM={actorsFSM:[]};let fsmObj={actor:"mergedFSM"},mergedTrans,mergedTransitions=transitions.filter(t=>"contingency"!=t.TYPE).filter((mt,index,self)=>index===self.findIndex(t=>t.FROM===mt.FROM&&t.TO===mt.TO)),mergedS,mergedStates=states.filter(t=>"contingency"!=t.TYPE).filter((mt,index,self)=>index===self.findIndex(t=>t.STATEID===mt.STATEID));fsmObj.states=mergedStates,fsmObj.transitions=mergedTransitions,mergedFSM.actorsFSM.push(fsmObj),result+='subgraph cluster_merged { label="merged actor model";\r\n',mergedDOT="strict digraph G { \r\n node [shape=circle fixedsize=shape fontsize=8 width=1];\r\nrankdir=LR;\r\n",mergedStates.forEach((function(state,index){state.STATEID&&state.STATEID.length>0&&(state.LABEL&&0!=state.LABEL.length||(state.LABEL=state.STATEID),result=result+"merged_"+state.STATEID+"[",mergedDOT=mergedDOT+"merged_"+state.STATEID+"[",result=result+'label="'+state.LABEL+'"];\r\n',mergedDOT=mergedDOT+'label="'+state.LABEL+'"];\r\n')})),mergedTransitions.forEach((function(value,key){result=result+"merged_"+value.FROM+" -> merged_"+value.TO,mergedDOT=mergedDOT+"merged_"+value.FROM+" -> merged_"+value.TO,result+=";\r\n",mergedDOT+=";\r\n"})),result+="}\r\n",mergedDOT+="}\r\n"}return dot=dot+result+"}",dot};actors.onChange((function(value){var newtext=transformToDot(value,"merge");mergeFSMJSON=newtext,editor.contents(newtext)}));var generateHTML=function(jsonTxt){if(jsonTxt&&jsonTxt.length>0){let obj,results;$("#accordionActors").html(""),JSON.parse(jsonTxt).actorsFSM.forEach((function(actor,index){let tempHtml=basicActorHTML.replace(/Actor 1/g,actor.actor.replace(/ /g,"_"));tempHtml=tempHtml.replace(/_1/g,"_"+index),$("#accordionActors").append(tempHtml);let actorHTML=$(".actorCard:last"),transTable=actorHTML.find(".transitions_table tbody"),stateTable=actorHTML.find(".states_table tbody");$(transTable).empty(),$(stateTable).empty(),actor.transitions.forEach((function(trans,key){let appendText='<tr>\n                                            <td>\n                                                <input type="text" name="from" value="'+trans.FROM+'" class="form-control" />\n                                            </td>\n                                            <td>\n                                                <input type="text" name="to"  value="'+trans.TO+'" class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <input type="text" name="input"  value="'+trans.INPUT+'" class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <input type="text" name="type"  value="'+trans.TYPE+'" class="form-control"/>\n                                            </td>\n                                            <th>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </th>\n                                        </tr>';$(transTable).append($(appendText))})),actor.states.forEach((function(state,index){let temText='<tr>\n                                            <td >\n                                                <input type="text" name="id" value="'+state.STATEID+'" class="form-control" />\n                                            </td>\n                                            <td >\n                                                <input type="text" name="label"  value="'+state.LABEL+'" class="form-control"/>\n                                            </td>\n                                            <td >\n                                                <input type="text" name="type"  value="'+state.TYPE+'" class="form-control"/>\n                                            </td>\n                                            <td >\n                                                <input type="text" name="output"  value="'+state.OUTPUT+'" class="form-control"/>\n                                            </td>\n                                            <td>\n                                                <a class="deleteRow">Delete This Row</a>\n\n                                            </td>\n\n                                        </tr>';$(stateTable).append($(temText))}))})),attachEvents()}};actor.onChange((function(value){currentFSMs=value;let newtext=transformToDot(value,"diagram");createDOT=newtext,editor.contents(newtext),generateHTML(value)}));var generateCurrentFSMs=function(){let result={actorsFSM:[]},actorsFSM=$(document).find(".actorCard");for(let i=0;i<actorsFSM.length;i++){let actor=actorsFSM[i],actorObj={},actorName=$(actor).find('input[id^="actorName_"]');actorObj.actor=$(actorName).val();let actorNameLabel=$(actor).find(".actorNameLabel");$(actorNameLabel).text(actorObj.actor);let transTable=$(actor).find(".transitions_table"),jsonTransTable=new JSONTable($(transTable));actorObj.transitions=jsonTransTable.toJSON();let stateTable=$(actor).find(".states_table"),jsonStatesTable=new JSONTable($(stateTable));actorObj.states=jsonStatesTable.toJSON(),result.actorsFSM.push(actorObj)}currentFSMSObj=result;let jsonString=JSON.stringify(result,null,4);return currentFSMs=jsonString,jsonString};editor.onChange((function(value){renderer.render(value),bar.text("Generating FSM.")}));var transitions={new:"Save",home:"Save",fiddle:"Update",gallery:"Fork"},middleware_image=function(req,event,next){var img=renderer.stage.getImage(!1);img.onload=function(){req.image=img.src,next()}};gallery.resources.forEach((function(e){$("#examples select").append("<option>"+e+"</option>")})),$("#actorsFSM").click((function(event){$("#actors").hide(),$("#actor").show(),$("#graph").show(),$("#fsmcreation").hide(),$("#merged_actor").hide(),$("#smartcontractdiv").hide(),$("#merged_FSM").hide(),$("#editor").show(),$("#cluster_d3_graph").hide(),$("#cluster_graph").hide(),createFSMJSON&&createFSMJSON.indexOf("actorsFSM")>-1?actor.contents(createFSMJSON):$.get("/./gallery/ecommerce.json").done((function(diagram){createFSMJSON=JSON.stringify(diagram,null,4),actor.contents(createFSMJSON)})),event.preventDefault()})),$("#actorsMerge").click((function(event){$("#actors").show(),$("#actor").hide(),$("#graph").show(),$("#fsmcreation").hide(),$("#merged_actor").hide(),$("#smartcontractdiv").hide(),$("#merged_FSM").hide(),$("#editor").show(),$("#cluster_d3_graph").hide(),$("#cluster_graph").hide(),createFSMJSON&&createFSMJSON.indexOf("actorsFSM")>-1?actors.contents(createFSMJSON):$.get("/./gallery/ecommerce.json").done((function(diagram){console.log(diagram),mergeFSMJSON=JSON.stringify(diagram,null,4),createFSMJSON=mergeFSMJSON,actors.contents(mergeFSMJSON)})),event.preventDefault()})),$("#createFSM").click((function(event){$("#actors").hide(),$("#actor").show(),$("#graph").hide(),$("#fsmcreation").show(),$("#merged_actor").hide(),$("#smartcontractdiv").hide(),$("#merged_FSM").hide(),$("#editor").show(),$("#cluster_d3_graph").hide(),$("#cluster_graph").hide(),generateHTML(actor.contents()),event.preventDefault()}));var getAllComplexNodes=function(){let complexNode=[];if(mergedFSM&&mergedFSM.actorsFSM&&mergedFSM.actorsFSM.length>0&&mergedFSM.actorsFSM[0].transitions.length>0||(createFSMJSON&&createFSMJSON.indexOf("actorsFSM")>-1?transformToDot(createFSMJSON,"merge"):$.get("/./gallery/ecommerce.json").done((function(diagram){console.log(diagram),mergeFSMJSON=JSON.stringify(diagram,null,4),transformToDot(createFSMJSON=mergeFSMJSON,"merge")}))),!((HSMJSON=Object.assign({},mergedFSM)).actorsFSM.length>0))throw new Error("merged FSM is null");{let actor=HSMJSON.actorsFSM[0],transitions;actor.transitions.forEach((function(t,index){let from=t.FROM,to=t.TO,from_obj=actor.states.find(f=>f.STATEID==from),to_obj=actor.states.find(t=>t.STATEID==to);to_obj&&(to_obj.FROMEDGES?-1===to_obj.FROMEDGES.indexOf(from)&&to_obj.FROMEDGES.push(from):to_obj.FROMEDGES=[from]),from_obj&&(from_obj.TOEDGES?-1===from_obj.TOEDGES.indexOf(to)&&from_obj.TOEDGES.push(to):from_obj.TOEDGES=[to])}));let states=actor.states,states_sorted=[];for(states.forEach((function(s,index){s.FROMEDGES&&0!=s.FROMEDGES.length||(s.LEVEL=0,states_sorted.push(s))}));states_sorted.length<states.length;){let difference=states.filter(x=>{let tem=states_sorted.filter(y=>x.STATEID==y.STATEID);return!tem||tem.length<1}),lastLevel=0;states_sorted[states_sorted.length-1]&&(lastLevel=states_sorted[states_sorted.length-1].LEVEL);let lastLevelStates=states_sorted.filter(x=>x.LEVEL==lastLevel);lastLevelStates&&lastLevelStates.length>0&&lastLevelStates.forEach((function(s,index){if(s.TOEDGES&&s.TOEDGES.length>0){let nextLevalStates=difference.filter(x=>s.TOEDGES.includes(x.STATEID));nextLevalStates=nextLevalStates.filter(x=>{let tem=states_sorted.filter(y=>x.STATEID==y.STATEID);return!tem||tem.length<1}),nextLevalStates.map(n=>n.LEVEL=lastLevel+1),states_sorted=states_sorted.concat(nextLevalStates)}}))}HSM_sortedNodes=states_sorted,states=states_sorted,actor.states=states_sorted,states.forEach((function(s,index){s.FROMEDGES&&0!=s.FROMEDGES.length&&s.TOEDGES&&0!=s.TOEDGES.length?(s.FROMEDGES.length>1||s.TOEDGES.length>1)&&complexNode.push(s):complexNode.push(s)}))}return complexNode},findAllSubsets=function(nodesArr){let result=[];for(i=0;i<nodesArr.length;i++)for(j=i;j<nodesArr.length;j++)result.push([nodesArr[i],nodesArr[j]]);return result},isSquence=function(jsonTxt){let result="";return""},isMoutN=function(jsonTxt){let result="";return""};let nodeTravserString="";var nodeTravser=function(node,endnode,str){let suffix="";if(str&&(suffix=str),node.STATEID==endnode.STATEID)return;let result="";result=result+node.STATEID+suffix+"[",result=result+'label="'+node.LABEL+'"];\r\n';let nextNodes=node.TOEDGES;nextNodes&&nextNodes.length>0&&nextNodes.forEach((function(nextnode){nextnode=HSM_sortedNodes.filter(s=>s.STATEID==nextnode)[0],result=result+node.STATEID+suffix+" -> "+nextnode.STATEID+suffix+";\r\n",nodeTravserString+=result,nodeTravser(nextnode,endnode,suffix)}))},findAllSimpleSubgraph=function(allSubsets){let results=[],index=1,suffix="_single_view";return allSubsets.forEach((function(subset){if(suffix="_single_view_S"+index,subset[0].STATEID!=subset[1].STATEID){let result="subgraph cluster_S"+index+' { \r\nmargin=10;label="S'+index+'";\r\nstyle=dashed;\r\n',endnodeid=HSM_sortedNodes.filter(s=>s.STATEID==subset[1].STATEID)[0];nodeTravserString=endnodeid.STATEID+suffix+"[",nodeTravserString=nodeTravserString+'label="'+endnodeid.LABEL+'"];\r\n',nodeTravser(subset[0],subset[1],suffix),result+=nodeTravserString,result+="}\r\n",index++,results.push(result)}})),results},drawHFM=function(simpleSubgraphs){let result="strict digraph G {\r\n node [shape=circle fixedsize=shape fontsize=8 width=1];\r\nrankdir=LR;\r\n";result+=simpleSubgraphs.reverse().join("\r\n"),result+="}",HSMDOT=result,editor.contents(result)};$("#transformHSM").click((function(event){$("#actors").hide(),$("#actor").hide(),$("#graph").show(),$("#fsmcreation").hide(),$("#merged_actor").show(),$("#smartcontractdiv").hide(),$("#merged_FSM").hide(),$("#editor").show(),$("#cluster_d3_graph").hide(),$("#cluster_graph").hide();let complexNodes=getAllComplexNodes(),allSubsets=findAllSubsets(complexNodes),simpleSubgraphs=findAllSimpleSubgraph(allSubsets);drawHFM(simpleSubgraphs),$("#merged_actor #mergedFSM").text(JSON.stringify(HSMJSON,null,4)),event.preventDefault()})),$(document).ready((function(){attachEvents(),$("#actorsFSM").click()}));var router=new Grapnel;router.add("/",(function(){editor.contents("strict digraph G {\n  ex -> am -> ple\n}")})).add("/new",(function(){editor.contents("strict digraph G {\n\t\n}")})).add("/save",middleware_image,editor.middleware.source,db.middleware.save,db.middleware.update,db.middleware.image,(function(req){router.navigate("/"+req.params.fiddle)})).add("/fork",editor.middleware.source,db.middleware.save,db.middleware.update,(function(req){router.navigate("/"+req.params.fiddle)})).add("/update",middleware_image,editor.middleware.source,db.middleware.update,db.middleware.image,(function(req){router.navigate("/"+[req.params.fiddle,req.params.attachment].join("/"))})).add("/gallery",(function(){router.navigate("/gallery/ecommerce.json")})).add("/gallery/:gallery",gallery.middleware.load,(function(req){})).add("/:fiddle([a-zA-Z]{8})/:attachment?",db.middleware.load,db.middleware.source,(function(req){document=req.document,editor.contents(req.source)})).add("*",(function(req,e){if(e.parent()){var clazz=e.previousState.req.keys.length>0?e.previousState.req.keys[0].name:e.previousState.route.replace("/","");clazz=clazz||"home",$("body").removeClass().addClass(clazz);var state=transitions[clazz];null!=state&&($("#button").attr("href","#/"+state.toLowerCase()),$("#button span").text(state+" diagram")),ga("send","pageview",e.value),e.stopPropagation()}else router.navigate("/gallery")}))}));